Realtime Globals.Realtime()
Returns time in seconds since CS:GO was started.
Frametime Globals.Frametime()
Returns time in seconds it took to render the frame.
Curtime Globals.Curtime()
Returns the game time in seconds.
TickInterval Globals.TickInterval()
Returns the time elapsed in one game tick in seconds.
Tickrate Globals.Tickrate()
Returns server tick settings.
Tickcount Globals.Tickcount()
Returns amount of ticks elapsed on the server.
AddLabel UI.AddLabel(string)
Adds a text label.
ToggleHotkey UI.ToggleHotkey(...item)
Used to toggle hotkey.
AddTextbox UI.AddTextbox("string")
Adds a textbox.
SetColor UI.SetColor(...item)
Set color of color picker.
AddColorPicker UI.AddColorPicker(string name)
Adds a color picker.
AddMultiDropdown UI.AddMultiDropdown(name, items)
Adds a dropdown with ability to select more items.
IsMenuOpen UI.IsMenuOpen()
Returns true if the menu is open, false otherwise.
AddDropdown UI.AddDropdown(name, items)
Adds a dropdown.
AddHotkey UI.AddHotkey(name)
Adds a label with a key picker control.
AddSliderFloat UI.AddSliderFloat(name, min_value, max_value)
Adds a floating-point slider.
AddSliderInt UI.AddSliderInt(name, min_value, max_value)
Adds an integer slider.
AddCheckbox UI.AddCheckbox(name)
Adds a checkbox control.
IsHotkeyActive UI.IsHotkeyActive(...item)
Returns whether a key is currently active or not.
GetColor UI.GetColor(...item)
Returns an array of color values from a control.
GetString UI.GetString (...item)
Returns a string representation of an item's current value.
SetEnabled UI.SetEnabled (...item)
Changes menu item(s) visibility.
SetValue UI.SetValue (...item, value)
Sets the value of an UI item's setting.
GetValue UI.GetValue (...item)
Returns the value of UI item's setting.
GetEntitiesByClassID Entity.GetEntitiesByClassID( int classid )
Returns entities of given Class ID.
GetHitboxPosition Entity.GetHitboxPosition(int ent_index, int hitbox_index)
Returns an array object with X, Y, Z for hitbox position.
GetEyePosition Entity.GetEyePosition(int ent_index)
Returns an array object with X, Y, Z for eye position.
GetGameRulesProxy Entity.GetGameRulesProxy()
Returns entity index of game rules entity.
IsBot Entity.IsBot(ent_index)
Returns true or false.
GetWeapon Entity.GetWeapon(ent_index)
Returns player weapon name.
SetProp Entity.SetProp(player_entity_index, table_name, prop_name, new_value)
Set value of property.
GetProp Entity.GetProp(player_entity_index, table_name, prop_name)
Returns the value of the property.
GetRenderOrigin Entity.GetRenderOrigin()
Returns an array of x, y, z.
GetName Entity.GetName(entity_index)
Returns a string that is the player name.
GetClassName Entity.GetClassName()
Returns a string that represents the class name instead of the class ID.
GetClassID Entity.GetClassID(entity_index)
Returns the class ID.
IsDormant Entity.IsDormant(entity_index)
Finds out whether an entity is dormant.
IsAlive Entity.IsAlive(entity_index)
Finds out whether an entity is alive.
IsValid Entity.IsValid(entity index)
Finds out whether an entity is valid.
IsLocalPlayer Entity.IsLocalPlayer(entity_index)
Finds out whether an entity is the local player.
IsEnemy Entity.IsEnemy(entity index)
Finds out whether an entity is an enemy.
IsTeammate Entity.IsTeammate(entity_index)
Finds out whether an entity is a teammate.
GetEntityFromUserID Entity.GetEntityFromUserID(userid)
Finds the entity of the given user id.
GetLocalPlayer Entity.GetLocalPlayer()
Returns the entity index of local the player.
GetTeammates Entity.GetEntities()
Returns an array of teammate entity indexes.
GetEnemies Entity.GetEnemies()
Returns an array of enemy entity indexes.
GetPlayers Entity.GetPlayers()
Returns an array of player entity indexes.
GetEntities Entity.GetEntities()
Returns an array of entity indexes.
TextSizeCustom Render.TextSizeCustom( string text, font );
Finds the text width size of the given string with custom font.
StringCustom Render.StringCustom( int x, int y, int align, string text, [ color ], font );
Used to draw string with custom font.
FindFont Render.FindFont( string name, int size, int weight );
Used to search for font identifier.
AddFont Render.AddFont( string name, int size, int weight )
Adds a custom font.
Polygon Render.Polygon( [ [ x, y ], [ x1, y1 ], [ x2, y2 ] ], [ R, G, B, A ] );
Draws a polygon with shape based on arguments passed.
GradientRect Render.GradientRect( x, y, w, h, dir, [ col1 ], [ col2 ] );
Draws a gradient rectangle with the given position, size, and RGBA color.
TextSize Render.TextSize(string, int size [optional])
Finds the text width size of the given string.
GetScreenSize Render.GetScreenSize()
Returns width and height of your screen.
WorldToScreen Render.WorldToScreen([x, y, z])
Finds the world position for the given screen position.
Circle Render.Circle(x, y, r, color)
Draws a circle with the given position, radius, and RGBA color.
FilledRect Render.FilledRect(x, y, width, height, color)
Draws a filled rectangle with the given position, size, and RGBA color.
Rect Render.Rect(x, y, width, height, color)
Draws a rectangle with the given position, size, and RGBA color.
Line Render.Line(x, y, x1, y1, color)
Draws a line with the given position and RGBA color.
String Render.String(x, y, align, message, color, int size [optional])
Draws a string with the given position, align, RGBA color, and size.
SetString Convar.SetString("cmd", string)
Sets the string value of the given console command.
GetString Convar.GetString("cmd")
Finds the string value of the given console command.
SetFloat Convar.SetFloat ("cmd", value)
Sets the float value of the given console command.
GetFloat Convar.GetFloat("cmd")
Finds the float value of the given console command.
SetInt Convar.SetInt("cmd", value)
Sets the integer value of the given console command.
GetInt Convar.GetInt("cmd")
Finds the integer value of the given console command.
ragebot_fire ragebot_fire
Returns information on ragebot_fire event.
GetString Event.GetString(string)
Finds the string value of the given game event.
GetFloat Event.GetFloat(float)
Finds the float value of the given game event.
GetInt Event.GetInt(int)
Finds the integer value of the given game event.
Bullet Trace.Bullet(int ent_index, array start, array end)
Used to trace bullet between point A and B.
Line Trace.Line(int ent_index, array start, array end)
Used to trace line between point A and B.
ForceCrouch UserCMD.ForceCrouch()
Forces user crouch.
ForceJump UserCMD.ForceJump()
Forces user jump.
SetAngles UserCMD.SetAngles([pitch, yaw, roll])
Control user angles.
SetMovement UserCMD.SetMovement([forwardmove, sidemove, upmove])
Control user movement.
StopMicrophone Sound.StopMicrophone( );
Used to stop Sound.PlayMicrophone
PlayMicrophone Sound.PlayMicrophone(path)
Plays a sound on microphone.
Play Sound.Play( string path )
Plays a sound.
GetInaccuracy Local.GetInaccuracy();
Returns inaccuracy.
GetSpread Local.GetSpread();
Returns spread.
GetFakeYaw Local.GetFakeYaw();
Returns fake yaw angle.
GetRealYaw Local.GetRealYaw();
Returns real yaw angle.
SetClanTag Local.SetClanTag(string text);
Used to set clan tag.
SetViewAngles Local.SetViewAngles(array)
Sets user-defined view angles.
GetViewAngles Local.GetViewAngles()
Returns array object with pitch, yaw and roll
Latency Local.Latency()
Returns local player ping to the server.
GetUsername Cheat.GetUsername();
Returns forum username.
PrintChat Cheat.PrintChat(string text)
Prints a message in in-game chat.
FrameStage Cheat.FrameStage()
Returns an integer value of frame stage.
RegisterCallback Cheat.RegisterCallback(callback, function)
Registers a callback within a said function.
ExecuteCommand Cheat.ExecuteCommand(cmd)
Executing commands in in-game console.
PrintColor Cheat.PrintColor([ r, g, b, a ], "Text")
Printing colored messages to the in-game console.
Print Cheat.Print(message)
Printing messages to the in-game console.
GetCursorPosition Input.GetCursorPosition()
Returns an array object with X, Y for cursor position.
IsKeyPressed Input.IsKeyPressed(VK_KEY)
Returns boolean value whether or not a key was pressed.
GetServerString World.GetServerString();
Returns server IP.
GetMapName Global.GetMapName()
Returns current map name.
